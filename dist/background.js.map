{"version":3,"file":"background.js","mappings":";;;;;;AACA;AAAA;AAAA;AADA;AACA;AACA;AAEA;AACA;;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9CA;AAAA;AAAA","sources":["webpack://LeetNotes/./src/background/background.js"],"sourcesContent":["const getPrompt = (code) => {\n  return `Please explain the following code as if someone was taking leetcode notes and wanted to remember how they did it at a later time. Just explain the high level code on how it works, keep it concise and to the point. Do not bother repeating the function signature. ${code}`;\n};\n\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n  const code = request.code;\n\n  // to make sure some valid code is there\n  if (code.length > 5) translateCode(code);\n\n  sendResponse({ success: true });\n});\n\nlet translatedCode = '';\n\nconst translateCode = async (code) => {\n  const apiKey = process.env.OPENAI_API_KEY;\n  console.log(apiKey);\n  const model = 'gpt-3.5-turbo';\n\n  const headers = {\n    'Content-Type': 'application/json',\n    Authorization: `Bearer ${apiKey}`,\n  };\n\n  const body = JSON.stringify({\n    model: model,\n    max_tokens: 300,\n    temperature: 0,\n    messages: [\n      {\n        role: 'system',\n        content:\n          \"You are a efficient note writer, who looks at code and writes an explanation of the code in coincise way. Don't explain the Class.\",\n      },\n      { role: 'user', content: getPrompt(code) },\n    ],\n  });\n\n  return fetch('https://api.openai.com/v1/chat/completions', {\n    method: 'POST',\n    headers: headers,\n    body: body,\n  })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n      translatedCode = data.choices[0].message.content;\n      chrome.storage.sync.set(\n        {\n          translatedCode,\n        },\n        () => {\n          console.log(`translatedCode is set to ${translatedCode}`);\n          chrome.tabs.create({ url: 'popup.html' });\n        }\n      );\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n};\n"],"names":[],"sourceRoot":""}